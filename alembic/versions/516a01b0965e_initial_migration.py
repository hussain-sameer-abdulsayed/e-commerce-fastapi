"""initial migration

Revision ID: 516a01b0965e
Revises: 
Create Date: 2025-07-30 20:45:50.775569

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '516a01b0965e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coupon',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('discount_amount', sa.Numeric(), nullable=False),
    sa.Column('min_order_amount', sa.Numeric(), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=False),
    sa.Column('used_count', sa.Integer(), nullable=False),
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coupon_code'), 'coupon', ['code'], unique=True)
    op.create_index(op.f('ix_coupon_id'), 'coupon', ['id'], unique=False)
    op.create_table('shipment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('province', sa.Enum('baghdad', 'basrah', 'ninawa', 'erbil', 'kirkuk', 'sulaymaniyah', 'duhok', 'anbar', 'babil', 'najaf', 'karbala', 'maysan', 'diyala', 'wasit', 'salahaddin', 'muthanna', 'thiqar', name='province'), nullable=False),
    sa.Column('cost', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shipment_id'), 'shipment', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_user_name'), 'user', ['user_name'], unique=True)
    op.create_table('cart',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('total', sa.Numeric(), nullable=True),
    sa.Column('coupon_id', sa.Uuid(), nullable=False),
    sa.Column('coupon_amount', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupon.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cart_id'), 'cart', ['id'], unique=False)
    op.create_table('category',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('main_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=False)
    op.create_table('coupon_usage',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('coupon_id', sa.Uuid(), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupon.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coupon_usage_id'), 'coupon_usage', ['id'], unique=False)
    op.create_table('seller_profile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('store_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('store_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('main_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('store_phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seller_profile_id'), 'seller_profile', ['id'], unique=False)
    op.create_table('shipment_discount',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('discount_amount', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('start_at', sa.Date(), nullable=False),
    sa.Column('end_at', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('shipment_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shipment_discount_id'), 'shipment_discount', ['id'], unique=False)
    op.create_table('user_profile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('main_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', name='gender'), nullable=False),
    sa.Column('birth_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_profile_id'), 'user_profile', ['id'], unique=False)
    op.create_table('address',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('seller_profile_id', sa.Uuid(), nullable=True),
    sa.Column('province', sa.Enum('baghdad', 'basrah', 'ninawa', 'erbil', 'kirkuk', 'sulaymaniyah', 'duhok', 'anbar', 'babil', 'najaf', 'karbala', 'maysan', 'diyala', 'wasit', 'salahaddin', 'muthanna', 'thiqar', name='province'), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nearest_point', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_store_address', sa.Boolean(), nullable=False),
    sa.Column('is_shipment_address', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['seller_profile_id'], ['seller_profile.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_id'), 'address', ['id'], unique=False)
    op.create_table('category_discount',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('discount_amount', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('start_at', sa.Date(), nullable=False),
    sa.Column('end_at', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('category_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_discount_id'), 'category_discount', ['id'], unique=False)
    op.create_table('product',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('stock_quantity', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('main_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('seller_profile_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['seller_profile_id'], ['seller_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_id'), 'product', ['id'], unique=False)
    op.create_index(op.f('ix_product_name'), 'product', ['name'], unique=False)
    op.create_table('cart_item',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('cart_id', sa.Uuid(), nullable=True),
    sa.Column('product_id', sa.Uuid(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(), nullable=False),
    sa.Column('total', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cart_item_id'), 'cart_item', ['id'], unique=False)
    op.create_table('order',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('address_id', sa.Uuid(), nullable=True),
    sa.Column('ship_to_province', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ship_to_city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ship_to_street', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ship_to_contact', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('coupon_id', sa.Uuid(), nullable=True),
    sa.Column('coupon_amount', sa.Numeric(), nullable=True),
    sa.Column('sub_total', sa.Numeric(), nullable=False),
    sa.Column('shipping_cost', sa.Numeric(), nullable=False),
    sa.Column('total', sa.Numeric(), nullable=False),
    sa.Column('shipment_id', sa.Uuid(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'accepted', 'shipped', 'dellivered', 'cancelled', name='order_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupon.id'], ),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_id'), 'order', ['id'], unique=False)
    op.create_index(op.f('ix_order_order_number'), 'order', ['order_number'], unique=True)
    op.create_table('product_category',
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'category_id')
    )
    op.create_table('product_discount',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('discount_amount', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('start_at', sa.Date(), nullable=False),
    sa.Column('end_at', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_discount_id'), 'product_discount', ['id'], unique=False)
    op.create_table('product_review',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_profile_id', sa.Uuid(), nullable=True),
    sa.Column('product_id', sa.Uuid(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_review_id'), 'product_review', ['id'], unique=False)
    op.create_table('order_item',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_item_id'), 'order_item', ['id'], unique=False)
    op.create_index(op.f('ix_order_item_order_id'), 'order_item', ['order_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_item_order_id'), table_name='order_item')
    op.drop_index(op.f('ix_order_item_id'), table_name='order_item')
    op.drop_table('order_item')
    op.drop_index(op.f('ix_product_review_id'), table_name='product_review')
    op.drop_table('product_review')
    op.drop_index(op.f('ix_product_discount_id'), table_name='product_discount')
    op.drop_table('product_discount')
    op.drop_table('product_category')
    op.drop_index(op.f('ix_order_order_number'), table_name='order')
    op.drop_index(op.f('ix_order_id'), table_name='order')
    op.drop_table('order')
    op.drop_index(op.f('ix_cart_item_id'), table_name='cart_item')
    op.drop_table('cart_item')
    op.drop_index(op.f('ix_product_name'), table_name='product')
    op.drop_index(op.f('ix_product_id'), table_name='product')
    op.drop_table('product')
    op.drop_index(op.f('ix_category_discount_id'), table_name='category_discount')
    op.drop_table('category_discount')
    op.drop_index(op.f('ix_address_id'), table_name='address')
    op.drop_table('address')
    op.drop_index(op.f('ix_user_profile_id'), table_name='user_profile')
    op.drop_table('user_profile')
    op.drop_index(op.f('ix_shipment_discount_id'), table_name='shipment_discount')
    op.drop_table('shipment_discount')
    op.drop_index(op.f('ix_seller_profile_id'), table_name='seller_profile')
    op.drop_table('seller_profile')
    op.drop_index(op.f('ix_coupon_usage_id'), table_name='coupon_usage')
    op.drop_table('coupon_usage')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_cart_id'), table_name='cart')
    op.drop_table('cart')
    op.drop_index(op.f('ix_user_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_shipment_id'), table_name='shipment')
    op.drop_table('shipment')
    op.drop_index(op.f('ix_coupon_id'), table_name='coupon')
    op.drop_index(op.f('ix_coupon_code'), table_name='coupon')
    op.drop_table('coupon')
    # ### end Alembic commands ###
